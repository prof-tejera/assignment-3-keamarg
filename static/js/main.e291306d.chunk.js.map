{"version":3,"sources":["TimerProvider.js","components/documentation/DocumentComponent.js","components/generic/Loading.js","utils/helpers.js","components/generic/Button.js","components/generic/DisplayTime.js","components/generic/Panel.js","components/generic/Settings.js","components/generic/Navbar.js","utils/css.js","components/generic/IntroOutro.js","components/generic/TimerQueue.js","views/DocumentationView.js","utils/hooks.js","components/generic/Timer.js","views/TimersView.js","views/AddView.js","App.js","index.js"],"names":["TimerContext","createContext","setBtnState","console","log","setSettingsState","TimerProvider","children","useState","btnState","settingsState","time","setTime","rounds","setRounds","rest","setRest","isRunning","setIsRunning","savedTime","setSavedTime","docs","setDocs","message","setMessage","showMessage","setShowMessage","currentRound","setCurrentRound","showSettingsMessage","setShowSettingsMessage","showTimerRounds","setShowTimerRounds","currentRest","setCurrentRest","localStorage","getItem","timerType","setTimerType","intro","setIntro","outro","setOutro","inQueue","setInQueue","timers","setTimers","timerRounds","setTimerRounds","Provider","value","Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","props","title","component","propDocs","map","doc","i","prop","description","type","defaultValue","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","COLORS","BUTTONS","reset","start","stop","settings","forward","ready","back","notReady","add","arrowUp","queue","limit","BTNTYPE","TIMERS","MESSAGES","STATUS","timerValue","timer","fullTime","Date","toISOString","hours","substr","minutes","seconds","deciSeconds","Btn","button","Button","styleName","onClick","inner","disabled","className","Display","label","DisplayTime","useContext","style","id","slice","Panel","SetInput","input","Text","p","Settings","setHours","setMinutes","setSeconds","restHours","setRestHours","restMinutes","setRestMinutes","restSeconds","setRestSeconds","handleTimerChange","e","target","name","checkValidity","Number","useEffect","handleRestChange","htmlFor","min","max","step","onChange","placeholder","NavList","ul","links","path","Navbar","handleClick","innerHTML","setItem","link","index","to","exact","activeClassName","SettingsBtn","css","ReadyBtn","QueueBtn","NotReadyBtn","BackBtn","PulseAnim","PulseAnim2","PulseAnim3","ColorAnim","FadeIn","Bounce","QueueStyle","h1","Choice1","Choice2","UpperPanel","Arrow","IntroOutro","history","useHistory","handleStartClick","Array","isArray","prevTimers","item","obj","Object","assign","status","JSON","stringify","length","push","Queue","Item","TimerQueue","totalTime","setTotalTime","reduce","prevVal","currVal","totalRest","key","newList","filter","removeItem","parse","useTimer","delay","callback","savedCallback","useRef","current","setInterval","clearInterval","useInterval","nextInQueue","lastInQueue","getMessage","prevTimerRounds","currentIndex","LowerPanel","Middlepanel","SettingsPanel","Message","Timer","match","handleClickSettingsReady","t","currentTarget","temp","Timers","routes","App","AddPanel","Selector","select","Add","handleAddClick","Navigation","nav","AddView","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e291306d.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const TimerContext = createContext({\n  setBtnState: () => {\n    console.log(\"setBtnState: Im outside the Timerprovider\");\n  },\n  setSettingsState: () => {\n    console.log(\"setSettingsState: Im outside the Timerprovider\");\n  },\n});\n\nconst TimerProvider = ({ children }) => {\n  const [btnState, setBtnState] = useState(true);\n  const [settingsState, setSettingsState] = useState(true);\n  const [time, setTime] = useState(0);\n  const [rounds, setRounds] = useState(1);\n  const [rest, setRest] = useState(1);\n  const [isRunning, setIsRunning] = useState(false);\n  const [savedTime, setSavedTime] = useState(0);\n  const [docs, setDocs] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [showMessage, setShowMessage] = useState(false);\n  const [currentRound, setCurrentRound] = useState(rounds);\n  const [showSettingsMessage, setShowSettingsMessage] = useState(false);\n  const [showTimerRounds, setShowTimerRounds] = useState(true);\n  const [currentRest, setCurrentRest] = useState(false);\n  const [timerType, setTimerType] = useState(\n    localStorage.getItem(\"timerType\")\n      ? localStorage.getItem(\"timerType\")\n      : \"Stopwatch\"\n  );\n  const [intro, setIntro] = useState(true);\n  const [outro, setOutro] = useState(false);\n  const [inQueue, setInQueue] = useState(false);\n  const [timers, setTimers] = useState([]);\n  const [timerRounds, setTimerRounds] = useState(0);\n\n  return (\n    <TimerContext.Provider\n      value={{\n        outro,\n        setOutro,\n        timerRounds,\n        setTimerRounds,\n        inQueue,\n        setInQueue,\n        timers,\n        setTimers,\n        intro,\n        setIntro,\n        timerType,\n        setTimerType,\n        currentRest,\n        setCurrentRest,\n        showTimerRounds,\n        setShowTimerRounds,\n        showSettingsMessage,\n        setShowSettingsMessage,\n        currentRound,\n        setCurrentRound,\n        message,\n        setMessage,\n        showMessage,\n        setShowMessage,\n        docs,\n        setDocs,\n        savedTime,\n        setSavedTime,\n        isRunning,\n        setIsRunning,\n        time,\n        setTime,\n        rounds,\n        setRounds,\n        rest,\n        setRest,\n        btnState,\n        setBtnState,\n        settingsState,\n        setSettingsState,\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport default TimerProvider;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = (props) => {\n  return (\n    <Wrapper>\n      <Title>{props.title}</Title>\n      <Container>\n        <RenderComponent>{props.component}</RenderComponent>\n        <Documentation>\n          <tbody>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </tbody>\n          {props.propDocs.map((doc, i) => {\n            return (\n              <tbody key={i}>\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = (props) => {\n  const size = sizeMapping[props.size];\n  const { color } = props;\n\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={size} color={color} />\n        <Dot size={size} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={size} color={color} />\n        <Dot size={size} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n//Colors used\nexport const COLORS = {\n  countdown: \"#316E94\",\n  stopwatch: \"#3FA2E0\",\n  xy: \"#E0BB34\",\n  tabata: \"#4E1394\",\n  purple: \"#7C28E0\",\n  start: \"#26DB5C\",\n  stop: \"#DB4E4E\",\n  reset: \"#2F333B\",\n  text: \"#FAF9F6\",\n  nav: \"#231F20\",\n};\n\n//Bootstrap icons for the buttons\nexport const BUTTONS = {\n  reset: \"bi bi-arrow-counterclockwise\",\n  start: \"bi bi-play-circle\",\n  stop: \"bi bi-pause-circle\",\n  settings: \"bi bi-gear\",\n  forward: \"bi bi-skip-forward-circle\",\n  ready: \"bi bi-check-circle\",\n  back: \"bi bi-arrow-left-circle\",\n  notReady: \"bi bi-circle\",\n  add: \"bi bi-plus-circle\",\n  arrowUp: \"bi bi-arrow-up-circle-fill\",\n  queue: \"bi bi-stack\",\n  limit: \"bi bi-x-circle\",\n};\n\nexport const BTNTYPE = {\n  reset: \"reset\",\n  start: \"start\",\n  stop: \"stop\",\n  settings: \"settings\",\n  forward: \"forward\",\n  ready: \"ready\",\n  back: \"back\",\n  notReady: \"notReady\",\n  add: \"add\",\n  arrowUp: \"arrowUp\",\n  queue: \"queue\",\n  limit: \"limit\",\n};\n\nexport const TIMERS = {\n  stopwatch: \"Stopwatch\",\n  countdown: \"Countdown\",\n  xy: \"XY\",\n  tabata: \"Tabata\",\n};\n\nexport const MESSAGES = {\n  finished: \"Well done!\",\n  settimer: \"Check your settings\",\n  rest: \"Rest now\",\n  work: \"Work!\",\n  work2: \"Back to work!\",\n  boost1: \"Almost there!\",\n  boost2: \"That's more like it!\",\n  boost3: \"Ya call that working?\",\n  boost4: \"Come on!\",\n  boost5: \"Keep going!\",\n};\n\nexport const STATUS = {\n  completed: \"completed\",\n  running: \"running\",\n  notRunning: \"notRunning\",\n};\n\n// Function for converting the seconds to a more human friendly format\nexport const timerValue = (value, timer) => {\n  const fullTime = new Date(value * 1000).toISOString();\n  const hours = fullTime.substr(12, 1);\n  const minutes = fullTime.substr(14, 2);\n  const seconds = fullTime.substr(17, 2);\n  const deciSeconds = fullTime.substr(20, 1);\n  if (timer) {\n    return [hours, minutes, seconds, deciSeconds];\n  } else {\n    return hours + \"h \" + minutes + \"m \" + seconds + \"s\";\n  }\n};\n\n// Function providing messages\nexport const getMessage = (currentRound) => {\n  switch (currentRound) {\n    case 1:\n      return MESSAGES.finished;\n    case 2:\n      return MESSAGES.boost1;\n    case 3:\n      return MESSAGES.boost2;\n    case 4:\n      return MESSAGES.boost3;\n    case 5:\n      return MESSAGES.boost4;\n    default:\n      return MESSAGES.boost5;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS, BUTTONS, BTNTYPE } from \"../../utils/helpers\";\n\nconst Btn = styled.button`\n  border-radius: 0.3rem;\n  border: none;\n  color: ${COLORS.text};\n  transition: 0.2s ease;\n  :hover {\n    opacity: 0.6;\n  }\n\n  background-color: ${(props) =>\n    props.value === BTNTYPE.start\n      ? COLORS.start\n      : props.value === BTNTYPE.stop\n      ? COLORS.stop\n      : COLORS.reset};\n`;\n\nconst Button = (props) => {\n  Button.defaultProps = {\n    styleName: \"none\",\n    value: \"none\",\n    onClick: null,\n    inner: \"\",\n    disabled: false,\n  };\n  const { value, styleName, onClick, inner, disabled } = props;\n  return (\n    <Btn\n      className={styleName}\n      value={value}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {inner}\n      <i className={BUTTONS[value] ? BUTTONS[value] : BUTTONS.start}></i>\n    </Btn>\n  );\n};\nButton.propTypes = {\n  styleName: PropTypes.string,\n  value: PropTypes.string,\n  onClick: PropTypes.func,\n  inner: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport { timerValue, COLORS } from \"../../utils/helpers.js\";\n\nconst Display = styled.label`\n  margin-bottom: 2rem;\n  font-size: 3rem;\n  font-weight: 300;\n  // font-family: \"Orbitron\", sans-serif;\n  #minutes,\n  #seconds {\n    display: inline-block;\n    width: 6rem;\n  }\n  #hours {\n    display: inline-block;\n    width: 5rem;\n  }\n  #deciSeconds {\n    display: inline-block;\n    width: 1rem;\n    font-size: 1rem;\n  }\n`;\n\nconst DisplayTime = () => {\n  const { time } = useContext(TimerContext);\n  const { currentRest } = useContext(TimerContext);\n\n  return (\n    <Display style={{ color: `${currentRest ? COLORS.stop : COLORS.text}` }}>\n      <span id=\"hours\">{timerValue(time, true).slice(0, 1)}h</span>\n      <span id=\"minutes\">{timerValue(time, true).slice(1, 2)}m</span>\n      <span id=\"seconds\">{timerValue(time, true).slice(2, 3)}s</span>\n    </Display>\n  );\n};\n\nexport default DisplayTime;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { COLORS, TIMERS } from \"../../utils/helpers.js\";\n\nconst Container = styled.div`\n  // border: 1px solid black;\n  width: 20rem;\n  background-color: ${(props) =>\n    props.type === TIMERS.stopwatch\n      ? COLORS.stopwatch\n      : props.type === TIMERS.countdown\n      ? COLORS.countdown\n      : props.type === TIMERS.xy\n      ? COLORS.xy\n      : COLORS.tabata};\n  font-size: 2rem;\n  border-radius: 0rem 0rem 0.3rem 0.3rem;\n`;\n\nconst Panel = (props) => {\n  Panel.defaultProps = {\n    timerType: \"Stopwatch\",\n  };\n  return (\n    <Container type={props.timerType} className=\"mainPanel\">\n      {props.children}\n    </Container>\n  );\n};\n\nPanel.propTypes = {\n  timerType: PropTypes.string,\n};\n\nexport default Panel;\n","import styled from \"styled-components\";\nimport { TIMERS } from \"../../utils/helpers.js\";\nimport { COLORS } from \"../../utils/helpers.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\n\nconst SetInput = styled.input`\n  // border: 1px solid black;\n  font-size: 0.8rem;\n  border-radius: 0.5rem;\n  border: 0px;\n  width: 4rem;\n  padding-left: 1rem;\n  margin: 0.2rem;\n  border: 1px solid grey;\n  border-style: outset;\n  &::-webkit-inner-spin-button {\n    opacity: 1;\n  }\n`;\nconst Text = styled.p`\n  font-size: 1rem;\n  color: ${COLORS.text};\n  padding-top: 0.5rem;\n  margin-block-start: 0;\n  margin-block-end: 0;\n`;\n\nconst Settings = () => {\n  const { setTime } = useContext(TimerContext);\n  const { setRounds } = useContext(TimerContext);\n  const { setRest } = useContext(TimerContext);\n  const { docs } = useContext(TimerContext);\n  const { timerType } = useContext(TimerContext);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [restHours, setRestHours] = useState(0);\n  const [restMinutes, setRestMinutes] = useState(0);\n  const [restSeconds, setRestSeconds] = useState(0);\n\n  //Timer handler\n  const handleTimerChange = (e) => {\n    if (!docs) {\n      if (e.target.name === \"hours\") {\n        if (!e.target.checkValidity()) {\n          if (e.target.value < 0) {\n            e.target.value = 0;\n          } else {\n            e.target.value = 9;\n          }\n        }\n        setHours(Number(e.target.value * 3600));\n      }\n      if (e.target.name === \"minutes\") {\n        if (!e.target.checkValidity()) {\n          if (e.target.value < 0) {\n            e.target.value = 0;\n          } else {\n            e.target.value = 59;\n          }\n        }\n        setMinutes(Number(e.target.value * 60));\n      }\n      if (e.target.name === \"seconds\") {\n        if (!e.target.checkValidity()) {\n          if (e.target.value < 0) {\n            e.target.value = 0;\n          } else {\n            e.target.value = 59;\n          }\n        }\n        setSeconds(Number(e.target.value));\n      }\n    }\n  };\n\n  useEffect(() => {\n    setTime(hours + minutes + seconds);\n  }, [hours, minutes, seconds, setTime]);\n\n  //Round handler\n  const handleRoundChange = (e) => {\n    if (!docs) {\n      if (!e.target.checkValidity()) {\n        if (e.target.value < 1) {\n          e.target.value = 1;\n        } else {\n          e.target.value = 9;\n        }\n      }\n      setRounds(Number(e.target.value));\n    }\n  };\n\n  //Rest handler\n  const handleRestChange = (e) => {\n    if (!docs) {\n      if (e.target.name === \"hours\") {\n        if (!e.target.checkValidity()) {\n          if (e.target.value < 0) {\n            e.target.value = 0;\n          } else {\n            e.target.value = 9;\n          }\n        }\n        setRestHours(Number(e.target.value * 3600));\n      }\n      if (e.target.name === \"minutes\") {\n        if (!e.target.checkValidity()) {\n          if (e.target.value < 0) {\n            e.target.value = 0;\n          } else {\n            e.target.value = 59;\n          }\n        }\n        setRestMinutes(Number(e.target.value * 60));\n      }\n      if (e.target.name === \"seconds\") {\n        if (!e.target.checkValidity()) {\n          if (e.target.value < 0) {\n            e.target.value = 0;\n          } else {\n            e.target.value = 59;\n          }\n        }\n        setRestSeconds(Number(e.target.value));\n      }\n    }\n  };\n\n  useEffect(() => {\n    setRest(restHours + restMinutes + restSeconds);\n  }, [restHours, restMinutes, restSeconds, setRest]);\n\n  // Inputs will not work on mobile with onKeyDown, preventing keyboard input\n  return (\n    <div className=\"w-100\">\n      <>\n        <Text>\n          <label htmlFor=\"hours\">Set workout time</label>\n        </Text>\n        <SetInput\n          // onKeyDown={(e) => e.preventDefault()}\n          name=\"hours\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          step=\"1\"\n          onChange={handleTimerChange}\n          placeholder=\"H\"\n        ></SetInput>\n        <SetInput\n          // onKeyDown={(e) => e.preventDefault()}\n          name=\"minutes\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          step=\"1\"\n          onChange={handleTimerChange}\n          placeholder=\"MM\"\n        ></SetInput>\n        <SetInput\n          // onKeyDown={(e) => e.preventDefault()}\n          name=\"seconds\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          step=\"1\"\n          onChange={handleTimerChange}\n          placeholder=\"SS\"\n        ></SetInput>\n      </>\n      {timerType === TIMERS.xy || timerType === TIMERS.tabata ? (\n        <>\n          <Text>\n            <label htmlFor=\"rounds\">Set number of rounds</label>\n          </Text>\n          <SetInput\n            name=\"rounds\"\n            type=\"number\"\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            onChange={handleRoundChange}\n            placeholder=\"1-10\"\n          ></SetInput>\n        </>\n      ) : null}\n      {timerType === TIMERS.tabata ? (\n        <>\n          <Text>\n            <label htmlFor=\"rest\">Set rest time</label>\n          </Text>\n          <SetInput\n            name=\"hours\"\n            type=\"number\"\n            min=\"0\"\n            max=\"9\"\n            step=\"1\"\n            onChange={handleRestChange}\n            placeholder=\"H\"\n          ></SetInput>\n          <SetInput\n            name=\"minutes\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            step=\"1\"\n            onChange={handleRestChange}\n            placeholder=\"MM\"\n          ></SetInput>\n          <SetInput\n            name=\"seconds\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            step=\"1\"\n            onChange={handleRestChange}\n            placeholder=\"SS\"\n          ></SetInput>\n        </>\n      ) : null}\n      {/* <Credentials>By Martin Gundtoft</Credentials> */}\n    </div>\n  );\n};\n\n// Settings.propTypes = {\n//   timerType: PropTypes.string,\n// };\n\nexport default Settings;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport { NavLink } from \"react-router-dom\";\nimport { COLORS, TIMERS } from \"../../utils/helpers\";\nimport styled from \"styled-components\";\n\nconst NavList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0.5rem 0;\n  overflow: hidden;\n  border-radius: 0.3rem 0.3rem 0rem 0rem;\n  width: 20rem;\n\n  a {\n    color: ${COLORS.text};\n    text-decoration: none;\n  }\n  .Stopwatch,\n  .Countdown,\n  .XY,\n  .Tabata {\n    background-color: ${COLORS.nav};\n    transition: 0.5s;\n  }\n  .Stopwatch:hover {\n    background-color: ${COLORS.stopwatch};\n  }\n  .Countdown:hover {\n    background-color: ${COLORS.countdown};\n  }\n  .Tabata:hover {\n    background-color: ${COLORS.tabata};\n  }\n  .XY:hover {\n    background-color: ${COLORS.xy};\n  }\n\n  li {\n    display: inline;\n    list-style-type: none;\n    text-decoration: none;\n    padding: 0.75rem;\n  }\n  .current {\n    .Stopwatch {\n      background-color: ${COLORS.stopwatch};\n    }\n    .Countdown {\n      background-color: ${COLORS.countdown};\n    }\n    .XY {\n      background-color: ${COLORS.xy};\n    }\n    .Tabata {\n      background-color: ${COLORS.tabata};\n    }\n  }\n  .active {\n    background-color: #04aa6d;\n  }\n`;\n\nconst links = [\n  { name: TIMERS.stopwatch, path: \"/stopwatch\" },\n  { name: TIMERS.countdown, path: \"/countdown\" },\n  { name: TIMERS.xy, path: \"/xy\" },\n  { name: TIMERS.tabata, path: \"/tabata\" },\n];\n\n// The navbar is used to set the initial states for the different timers\nconst Navbar = () => {\n  const { setTime } = useContext(TimerContext);\n  const { setRounds } = useContext(TimerContext);\n  const { setRest } = useContext(TimerContext);\n  const { setIsRunning } = useContext(TimerContext);\n  const { setBtnState } = useContext(TimerContext);\n  const { setSettingsState } = useContext(TimerContext);\n  const { docs } = useContext(TimerContext);\n  const { setCurrentRound } = useContext(TimerContext);\n  const { setShowSettingsMessage } = useContext(TimerContext);\n  const { setShowTimerRounds } = useContext(TimerContext);\n  const { setShowMessage } = useContext(TimerContext);\n  const { setSavedTime } = useContext(TimerContext);\n  const { setCurrentRest } = useContext(TimerContext);\n  const { setTimerType } = useContext(TimerContext);\n  const { setIntro } = useContext(TimerContext);\n  const { setOutro } = useContext(TimerContext);\n  const { setTimers } = useContext(TimerContext);\n  const { setInQueue } = useContext(TimerContext);\n  const { setTimerRounds } = useContext(TimerContext);\n\n  // Click handler for the navbar\n  const handleClick = (e) => {\n    if (!docs) {\n      setIntro(false);\n      setOutro(false);\n      setTimerRounds(false);\n      setInQueue(false);\n      setTime(0);\n      setTimers([]);\n      setShowTimerRounds();\n      setRounds(1);\n      setRest(10);\n      setIsRunning(false);\n      setBtnState(true);\n      setSettingsState(true);\n      setCurrentRound(0);\n      setShowSettingsMessage(false);\n      setShowMessage(false);\n      setSavedTime(0);\n      setCurrentRest(false);\n      setIntro(false);\n\n      if (e.target.innerHTML === \"Stopwatch\") {\n        setShowTimerRounds(true);\n      }\n      switch (e.target.innerHTML) {\n        case \"Stopwatch\":\n          setTimerType(TIMERS.stopwatch);\n          localStorage.setItem(\"timerType\", \"Stopwatch\");\n          break;\n        case \"Countdown\":\n          setTimerType(TIMERS.countdown);\n          localStorage.setItem(\"timerType\", \"Countdown\");\n\n          break;\n        case \"XY\":\n          setTimerType(TIMERS.xy);\n          localStorage.setItem(\"timerType\", \"XY\");\n\n          break;\n        case \"Tabata\":\n          setTimerType(TIMERS.tabata);\n          localStorage.setItem(\"timerType\", \"Tabata\");\n\n          break;\n        default:\n          setTimerType(TIMERS.stopwatch);\n      }\n    }\n  };\n\n  return (\n    <NavList>\n      {links.map((link, index) => (\n        <NavLink key={index} to={link.path} exact activeClassName=\"current\">\n          <li className={link.name} onClick={handleClick}>\n            {link.name}\n          </li>\n        </NavLink>\n      ))}\n    </NavList>\n  );\n};\nexport default Navbar;\n","import { css } from \"styled-components\";\nimport { COLORS, TIMERS } from \"../utils/helpers\";\n\n//buttons\n\nexport const SettingsBtn = css`\n  z-index: 1;\n  font-size: 1.5rem;\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  background-color: transparent;\n`;\n\nexport const ReadyBtn = css`\n  z-index: 1;\n  font-size: 3rem;\n  bottom: 1rem;\n  //   margin: 0 auto;\n  background-color: transparent;\n  animation: PulseAnim2 1s ease forwards;\n`;\n\nexport const QueueBtn = css`\n  z-index: 1;\n  font-size: 1.5rem;\n  bottom: 1rem;\n  //   margin: 0 auto;\n  background-color: transparent;\n  animation: PulseAnim3 1s ease forwards;\n`;\n\nexport const NotReadyBtn = css`\n  z-index: 1;\n  font-size: 3rem;\n  bottom: 1rem;\n  //   margin: 0 auto;\n  background-color: transparent;\n  opacity: 0.1;\n  :hover {\n    opacity: 0.2;\n  }\n`;\n\nexport const BackBtn = css`\n  z-index: 1;\n  font-size: 1.5rem;\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  background-color: transparent;\n`;\n\n//animations\nexport const PulseAnim = css`\n  @keyframes PulseAnim {\n    0% {\n      color: ${COLORS.stop};\n      transform: scale(1);\n    }\n    10% {\n      color: ${COLORS.stop};\n      transform: scale(1.1);\n    }\n\n    100% {\n      color: ${COLORS.stop};\n      transform: scale(1);\n    }\n  }\n`;\n\nexport const PulseAnim2 = css`\n  @keyframes PulseAnim2 {\n    0% {\n      color: ${COLORS.text};\n    }\n    50% {\n      transform: scale(1.1);\n    }\n    100% {\n      transform: scale(1);\n      color: ${COLORS.text};\n    }\n  }\n`;\n\nexport const PulseAnim3 = css`\n  @keyframes PulseAnim3 {\n    0% {\n      color: ${COLORS.text};\n    }\n    50% {\n      transform: scale(1.02);\n    }\n    100% {\n      transform: scale(1);\n      color: ${COLORS.text};\n    }\n  }\n`;\n\nexport const ColorAnim = css`\n  @keyframes ColorAnim {\n    0% {\n      color: black;\n    }\n    100% {\n      color: ${COLORS.stop};\n    }\n  }\n`;\n\nexport const FadeIn = css`\n  @keyframes FadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Bounce = css`\n  @keyframes Bounce {\n    0% {\n      top: 0rem;\n    }\n    25% {\n      top: 0.5rem;\n    }\n    50% {\n      top: 0rem;\n    }\n    75% {\n      top: 0.5rem;\n    }\n    100% {\n      top: 0rem;\n    }\n  }\n`;\n\nexport const QueueStyle = css`\n  width: 20rem;\n  flex-direction: column;\n  align-self: flex-start;\n  user-select: none;\n\n  .${TIMERS.stopwatch} {\n    background-color: ${COLORS.stopwatch};\n  }\n  .${TIMERS.countdown} {\n    background-color: ${COLORS.countdown};\n  }\n  .${TIMERS.xy} {\n    background-color: ${COLORS.xy};\n  }\n  .${TIMERS.tabata} {\n    background-color: ${COLORS.tabata};\n  }\n  .empty {\n    background-color: rgba(112, 112, 112, 0.5);\n  }\n  .loadBtn {\n    text-align: right;\n    float: right;\n  }\n  .Stopwatch:hover,\n  .Countdown:hover,\n  .XY:hover,\n  .Tabata:hover {\n    // background-color: rgba(255, 0, 0, 0.3);\n    opacity: 0.5;\n  }\n  .Stopwatch:hover::before,\n  .Countdown:hover::before,\n  .XY:hover::before,\n  .Tabata:hover::before {\n    content: \"\\u2716\";\n    text-align: right;\n    float: right;\n    color: rgba(255, 0, 0, 0.8);\n  }\n  .running {\n    border: 2px solid ${COLORS.start};\n  }\n  .notRunning {\n    border: 2px solid ${COLORS.text};\n  }\n  .completed {\n    border: 2px solid skyblue;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport Panel from \"./Panel\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { FadeIn, Bounce, ReadyBtn, PulseAnim2 } from \"../../utils/css\";\nimport {\n  BUTTONS,\n  BTNTYPE,\n  COLORS,\n  TIMERS,\n  STATUS,\n  MESSAGES,\n} from \"../../utils/helpers\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Text = styled.h1`\n  color: ${COLORS.text};\n  font-size: 2rem;\n  padding: 0 1rem 0 1rem;\n`;\n\nconst Choice1 = styled.div`\n  animation: FadeIn 2s ease;\n`;\n\nconst Choice2 = styled.div`\n  opacity: 0;\n  animation: FadeIn 2s ease 1s forwards;\n  .readyBtn {\n    color: ${COLORS.text};\n    ${ReadyBtn}\n  }\n`;\nconst UpperPanel = styled.div`\n  padding-top: 1rem;\n  height: 25rem;\n  text-align: center;\n  ${FadeIn};\n  ${Bounce};\n  ${PulseAnim2}\n  .readyBtn {\n    color: ${COLORS.text};\n    ${ReadyBtn}\n  }\n`;\n\nconst Arrow = styled.i`\n  color: ${COLORS.text};\n  animation: FadeIn 2s ease, Bounce 2s;\n  position: relative;\n`;\n\nconst IntroOutro = () => {\n  const { timerType, setTimerType } = useContext(TimerContext);\n  const { setIntro } = useContext(TimerContext);\n  const { timers, setTimers } = useContext(TimerContext);\n  const { setTime } = useContext(TimerContext);\n  const { setSavedTime } = useContext(TimerContext);\n  const { setSettingsState } = useContext(TimerContext);\n  const { btnState, setBtnState } = useContext(TimerContext);\n  const { setIsRunning } = useContext(TimerContext);\n  const { setRounds } = useContext(TimerContext);\n  const { setRest } = useContext(TimerContext);\n  const { setCurrentRound } = useContext(TimerContext);\n  const { setInQueue } = useContext(TimerContext);\n  const { setTimerRounds } = useContext(TimerContext);\n  const { outro, setOutro } = useContext(TimerContext);\n\n  const history = useHistory();\n\n  const setFirstQueue = () => {\n    setTimers((prevTimers) => [\n      { ...prevTimers[0], status: STATUS.running },\n      ...prevTimers.slice(1),\n    ]);\n  };\n\n  const refreshTimers = () => {\n    if (Array.isArray(timers)) {\n      setTimers((prevTimers) =>\n        prevTimers.map((item) => {\n          let obj = Object.assign({}, item);\n          obj.status = STATUS.notRunning;\n          return obj;\n        })\n      );\n    }\n  };\n\n  const handleStartClick = () => {\n    refreshTimers();\n    localStorage.setItem(\"timerQueue\", JSON.stringify(timers));\n    if (Array.isArray(timers) && timers.length > 0) {\n      setTimerRounds(timers.length);\n      setInQueue(true);\n      setTime(timers[0].time);\n      setFirstQueue();\n      setSavedTime(timers[0].time);\n      setIntro(false);\n      setOutro(false);\n      setSettingsState(false);\n      setBtnState(!btnState);\n      setIsRunning(true);\n      switch (timers[0].timerType) {\n        case TIMERS.stopwatch:\n          setTime(0);\n          history.push(`/stopwatch`);\n          setTimerType(TIMERS.stopwatch);\n          break;\n\n        case TIMERS.countdown:\n          history.push(`/countdown`);\n          setTimerType(TIMERS.countdown);\n          break;\n\n        case TIMERS.xy:\n          history.push(`/xy`);\n          setTimerType(TIMERS.xy);\n          setCurrentRound(timers[0].rounds);\n          setRounds(timers[0].rounds);\n          break;\n\n        case TIMERS.tabata:\n          history.push(`/tabata`);\n          setTimerType(TIMERS.tabata);\n          setCurrentRound(timers[0].rounds);\n          setRounds(timers[0].rounds);\n          setRest(timers[0].rest);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const handleAddClick = () => {\n    history.push(`/add`);\n  };\n  return (\n    <Panel timerType={timerType}>\n      <UpperPanel>\n        {Array.isArray(timers) && timers[0] && outro ? (\n          <span>\n            <Text>\n              {Array.isArray(timers) &&\n              timers.length > 0 &&\n              timers[timers.length - 1].status === STATUS.completed\n                ? MESSAGES.finished\n                : null}\n            </Text>\n            <Text>Start queue?</Text>\n            <Button\n              styleName=\"readyBtn\"\n              value={BTNTYPE.start}\n              onClick={handleStartClick}\n            ></Button>\n          </span>\n        ) : (\n          <div>\n            <Choice1>\n              <Arrow className={BUTTONS.arrowUp}></Arrow>\n              <Text>Choose a timer</Text>\n            </Choice1>\n            <Choice2>\n              {timers.length > 0 ? (\n                <span>\n                  <Text>... or start the queue</Text>\n                  <Button\n                    styleName=\"readyBtn\"\n                    value={BTNTYPE.start}\n                    onClick={handleStartClick}\n                  ></Button>\n                </span>\n              ) : (\n                <span>\n                  <Text>... or add to queue</Text>\n                  <Button\n                    styleName=\"readyBtn\"\n                    value={BTNTYPE.add}\n                    onClick={handleAddClick}\n                  ></Button>\n                </span>\n              )}\n            </Choice2>\n          </div>\n        )}\n      </UpperPanel>\n    </Panel>\n  );\n};\nexport default IntroOutro;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport { COLORS, timerValue, BTNTYPE } from \"../../utils/helpers\";\nimport Button from \"../generic/Button\";\nimport { useHistory } from \"react-router\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n  font-size: 1.8rem;\n`;\n\nconst Queue = styled.div`\n  width: 19rem;\n  // visibility: hidden;\n`;\nconst Item = styled.div`\n  color: ${COLORS.text};\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 0.5rem;\n  border-radius: 5px;\n  margin-top: 0.15rem;\n  font-size: 0.9rem;\n`;\n\nconst TimerQueue = () => {\n  const { timers, setTimers } = useContext(TimerContext);\n  const { setOutro } = useContext(TimerContext);\n  const { isRunning } = useContext(TimerContext);\n  const { setShowTimerRounds } = useContext(TimerContext);\n  const { setShowSettingsMessage } = useContext(TimerContext);\n\n  const [totalTime, setTotalTime] = useState(0);\n  const history = useHistory();\n\n  const removeItem = (id) => {\n    const newList = timers.filter((item) => item.id !== id);\n    setTimers(newList);\n  };\n\n  //set the total time in queue\n  useEffect(() => {\n    if (Array.isArray(timers) && timers.length > 0) {\n      const time = timers.reduce((prevVal, currVal) => ({\n        totalTime: prevVal.totalTime + currVal.totalTime,\n      }));\n      const rest = timers.reduce((prevVal, currVal) => ({\n        totalRest: prevVal.totalRest + currVal.totalRest,\n      }));\n      setTotalTime(time.totalTime + rest.totalRest);\n    } else {\n      setTotalTime(0);\n    }\n  }, [timers]);\n\n  const clickHandler = () => {\n    setTimers(JSON.parse(localStorage.getItem(\"timerQueue\")));\n    setOutro(true);\n    setShowSettingsMessage(false);\n    setShowTimerRounds(true);\n    history.push(`/`);\n  };\n  return (\n    // <Queue style={!timers[0] ? { visibility: \"hidden\" } : null}>\n    <Queue>\n      <Title>Queue ({timerValue(totalTime)})</Title>\n      {Array.isArray(timers) && timers.length > 0 ? (\n        timers.map((item, key) => (\n          <Item\n            id={key + 1}\n            key={key}\n            onClick={isRunning ? null : () => removeItem(item.id)}\n            className={`${item.timerType} ${item.status}`}\n          >\n            {key + 1} {item.timerType} (\n            {timerValue(item.totalTime + item.totalRest)}) {item.status}\n          </Item>\n        ))\n      ) : (\n        <Item className=\"empty\">\n          <span>Queue empty...</span>\n          {localStorage.getItem(\"timerQueue\") !== null &&\n          localStorage.getItem(\"timerQueue\") !== \"[]\" ? (\n            <Button\n              onClick={clickHandler}\n              inner=\"Load last? \"\n              value={BTNTYPE.queue}\n              styleName=\"loadBtn\"\n            ></Button>\n          ) : null}\n        </Item>\n      )}\n    </Queue>\n  );\n};\n\nexport default TimerQueue;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport DisplayTime from \"../components/generic/DisplayTime\";\nimport Panel from \"../components/generic/Panel\";\n// import Timer from \"../components/generic/Timer\";\nimport Settings from \"../components/generic/Settings\";\nimport Navbar from \"../components/generic/Navbar\";\nimport IntroOutro from \"../components/generic/IntroOutro\";\nimport TimerQueue from \"../components/generic/TimerQueue\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Button\"\n          component={<Button />}\n          propDocs={[\n            {\n              prop: \"styleName\",\n              description: \"Has the classNames\",\n              type: \"String\",\n              defaultValue: \"none\",\n            },\n            {\n              prop: \"value\",\n              description: \"Has the button type\",\n              type: \"String\",\n              defaultValue: \"none\",\n            },\n            {\n              prop: \"onClick\",\n              description: \"Has the clickHandler function\",\n              type: \"function\",\n              defaultValue: \"null\",\n            },\n            {\n              prop: \"inner\",\n              description: \"Has the text for the btn name\",\n              type: \"String\",\n              defaultValue: \"\",\n            },\n            {\n              prop: \"disabled\",\n              description: \"Is the button disabled?\",\n              type: \"Bool\",\n              defaultValue: \"false\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"IntroOutro\"\n          component={<IntroOutro />}\n          propDocs={[{}]}\n        />\n        <DocumentComponent\n          title=\"DisplayTime\"\n          component={<DisplayTime />}\n          propDocs={[{}]}\n        />\n\n        <DocumentComponent\n          title=\"Panel\"\n          component={<Panel />}\n          propDocs={[\n            {\n              prop: \"timerType\",\n              description: \"Has the type of timer\",\n              type: \"String\",\n              defaultValue: \"myClass\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Settings\"\n          component={<Settings />}\n          propDocs={[]}\n        />\n        <DocumentComponent\n          title=\"Timer\"\n          //The Timer component is outcommented, as the DocumentationView kept blowing up due to a useEffect in Timer, where I referenced \"props.match.path\", you can outcomment the line below and the timer import at the top to see what I mean.\n          // component={<Timer />}\n          propDocs={[\n            {\n              prop: \"timerType\",\n              description: \"Has the type of timer\",\n              type: \"String\",\n              defaultValue: \"Countdown\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Navbar\"\n          component={<Navbar />}\n          propDocs={[]}\n        />\n        <DocumentComponent\n          title=\"TimerQueue\"\n          component={<TimerQueue />}\n          propDocs={[]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import { useContext, useRef, useEffect, useState } from \"react\";\nimport { TimerContext } from \"../TimerProvider\";\nimport { TIMERS, getMessage, MESSAGES, STATUS } from \"./helpers\";\nimport { useHistory } from \"react-router\";\n\nexport const useTimer = () => {\n  const [delay] = useState(1000);\n  const { isRunning, setIsRunning } = useContext(TimerContext);\n  const { time, setTime } = useContext(TimerContext);\n  const { setBtnState } = useContext(TimerContext);\n  const { setShowMessage } = useContext(TimerContext);\n  const { setMessage } = useContext(TimerContext);\n  const { currentRound, setCurrentRound } = useContext(TimerContext);\n  const { savedTime, setSavedTime } = useContext(TimerContext);\n  const { currentRest, setCurrentRest } = useContext(TimerContext);\n  const { rest, setRest } = useContext(TimerContext);\n  const { timers, setTimers } = useContext(TimerContext);\n  const { timerType, setTimerType } = useContext(TimerContext);\n  const { timerRounds, setTimerRounds } = useContext(TimerContext);\n  const { intro } = useContext(TimerContext);\n  const { setOutro } = useContext(TimerContext);\n  const { setRounds } = useContext(TimerContext);\n\n  const history = useHistory();\n\n  // Hook for controlling all timers\n  useInterval(\n    () => {\n      if (timerType === TIMERS.stopwatch) {\n        //stopwatch\n        setTime(Number(time) + 1);\n        if (Number(time) === Number(savedTime) - 1) {\n          setIsRunning(false);\n          setBtnState(true);\n          setShowMessage(true);\n          setMessage(MESSAGES.finished);\n\n          // stopwatch queue\n          if (timerRounds > 1) {\n            setShowMessage(false);\n            nextInQueue();\n          } else if (timers[0] && !intro) {\n            setTimers((prevTimers) => [\n              ...prevTimers.slice(0, -1),\n              {\n                ...prevTimers[prevTimers.length - 1],\n                status: STATUS.completed,\n              },\n            ]);\n            setOutro(true);\n            history.push(`/`);\n          }\n        }\n      }\n      //countdown\n      if (timerType === TIMERS.countdown) {\n        if (Number(time) > 1) {\n          setTime(Number(time) - 1);\n        } else {\n          setIsRunning(false);\n          setTime(0);\n          setBtnState(true);\n          setShowMessage(true);\n          setMessage(MESSAGES.finished);\n\n          // countdown queue\n          if (timerRounds > 1) {\n            setShowMessage(false);\n            nextInQueue();\n          } else if (timers[0] && !intro) {\n            lastInQueue();\n          }\n        }\n      }\n      //xy\n      if (timerType === TIMERS.xy) {\n        if (Number(time) > 1) {\n          setTime(Number(time) - 1);\n        } else if (currentRound > 1) {\n          setCurrentRound((rounds) => rounds - 1);\n          setTime(savedTime);\n          setShowMessage(true);\n          setMessage(getMessage(currentRound));\n        } else if (Number(time) === 1 && currentRound === 1) {\n          setCurrentRound(0);\n          setTime(0);\n          setBtnState(true);\n          setIsRunning(false);\n          setShowMessage(true);\n          setMessage(MESSAGES.finished);\n\n          if (timerRounds > 1) {\n            setShowMessage(false);\n            nextInQueue();\n          } else if (timers[0] && !intro) {\n            lastInQueue();\n          }\n        }\n      }\n\n      //tabata\n      if (timerType === TIMERS.tabata) {\n        if (!currentRest) {\n          if (Number(time) > 1) {\n            setTime(Number(time) - 1);\n            setShowMessage(true);\n            setMessage(MESSAGES.work);\n          } else if (currentRound > 0) {\n            setTime(rest);\n            setCurrentRest(true);\n            setShowMessage(true);\n            setMessage(MESSAGES.rest);\n          }\n        }\n        if (currentRest) {\n          if (Number(time) > 1) {\n            setTime(Number(time) - 1);\n          } else if (currentRound > 1) {\n            setCurrentRound((rounds) => rounds - 1);\n            setTime(savedTime);\n            setCurrentRest(false);\n            setShowMessage(true);\n            setMessage(MESSAGES.work2);\n          } else if (Number(time) === 1 && currentRound === 1) {\n            setCurrentRound(0);\n            setTime(0);\n            setBtnState(true);\n            setIsRunning(false);\n            setShowMessage(true);\n            setCurrentRest(false);\n            setMessage(MESSAGES.finished);\n            if (timerRounds > 1) {\n              setShowMessage(false);\n              nextInQueue();\n            } else if (timers[0] && !intro) {\n              lastInQueue();\n            }\n          }\n        }\n      }\n    },\n    isRunning ? delay : null\n  );\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  //queue handlers\n  const nextInQueue = () => {\n    setTimerRounds((prevTimerRounds) => prevTimerRounds - 1);\n    let currentIndex = timers.length - timerRounds;\n\n    setTimers((prevTimers) =>\n      prevTimers.map((item, index) => {\n        let obj = Object.assign({}, item);\n        if (index === currentIndex) {\n          obj.status = STATUS.completed;\n        }\n        if (index === currentIndex + 1) {\n          obj.status = STATUS.running;\n        }\n        return obj;\n      })\n    );\n    setTimerType(timers[currentIndex + 1].timerType);\n    setSavedTime(timers[currentIndex + 1].time);\n    setRounds(timers[currentIndex + 1].rounds);\n    setCurrentRound(timers[currentIndex + 1].rounds);\n    setRest(timers[currentIndex + 1].rest);\n\n    if (timers[currentIndex + 1].timerType === TIMERS.stopwatch) {\n      setTime(0);\n    } else {\n      setTime(timers[currentIndex + 1].time);\n    }\n    setIsRunning(true);\n    setBtnState(false);\n  };\n\n  const lastInQueue = () => {\n    setTimers((prevTimers) => [\n      ...prevTimers.slice(0, -1),\n      {\n        ...prevTimers[prevTimers.length - 1],\n        status: STATUS.completed,\n      },\n    ]);\n    setOutro(true);\n    history.push(`/`);\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { TimerContext } from \"../../TimerProvider\";\nimport styled from \"styled-components\";\nimport {\n  PulseAnim,\n  PulseAnim2,\n  ColorAnim,\n  SettingsBtn,\n  NotReadyBtn,\n  BackBtn,\n  ReadyBtn,\n} from \"../../utils/css\";\nimport Panel from \"../generic/Panel\";\nimport Settings from \"../generic/Settings\";\nimport Button from \"../generic/Button\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport IntroOutro from \"./IntroOutro\";\nimport {\n  BTNTYPE,\n  COLORS,\n  TIMERS,\n  MESSAGES,\n  timerValue,\n  STATUS,\n} from \"../../utils/helpers\";\nimport { useTimer } from \"../../utils/hooks\";\nimport { useHistory } from \"react-router\";\n\nconst Title = styled.h1`\n  color: ${COLORS.text};\n  }\n`;\nconst UpperPanel = styled.div`\n  position: relative;\n  height: 15rem;\n  .false {\n    animation: PulseAnim 1s ease 1s infinite, ColorAnim 0.5s ease forwards;\n  }\n  ${PulseAnim};\n  ${ColorAnim};\n\n  i.stopwatch {\n    font-size: 10rem;\n    opacity: 40%;\n    display: block;\n  }\n  .settingsBtn {\n    ${SettingsBtn}\n  }\n`;\nconst LowerPanel = styled.div`\n  height: 15rem;\n  .ctaBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    background-color: transparent;\n  }\n`;\nconst Middlepanel = styled.div`\n  height: 5rem;\n  padding-top: 4rem;\n  .ctaBtn {\n    z-index: 1;\n    font-size: 1.5rem;\n    background-color: transparent;\n    line-height: 1rem;\n  }\n`;\n\nconst SettingsPanel = styled.div`\n  position: relative;\n  height: 25rem;\n  .settingsBtn {\n    ${SettingsBtn}\n  }\n  .readyBtn {\n    position: absolute;\n    ${ReadyBtn}\n  }\n\n  ${PulseAnim2}\n\n  .notReadyBtn {\n    position: absolute;\n    ${NotReadyBtn}\n  }\n\n  .backBtn {\n    ${BackBtn}\n  }\n\n  .settingsTitle {\n    position: absolute;\n    top: 1rem;\n`;\nconst Message = styled.p`\n  color: ${COLORS.text};}\n  line-height: 2rem;\n  font-size:1.5rem;\n`;\n\nconst Timer = (props) => {\n  const { time, setTime } = useContext(TimerContext);\n  const { isRunning, setIsRunning } = useContext(TimerContext);\n  const { btnState, setBtnState } = useContext(TimerContext);\n  const { settingsState, setSettingsState } = useContext(TimerContext);\n  const { savedTime, setSavedTime } = useContext(TimerContext);\n  const { docs } = useContext(TimerContext);\n  const { rounds, setRounds } = useContext(TimerContext);\n  const { currentRound, setCurrentRound } = useContext(TimerContext);\n  const { message, setMessage } = useContext(TimerContext);\n  const { showMessage, setShowMessage } = useContext(TimerContext);\n  const { showSettingsMessage, setShowSettingsMessage } =\n    useContext(TimerContext);\n  const { showTimerRounds, setShowTimerRounds } = useContext(TimerContext);\n  const { currentRest, setCurrentRest } = useContext(TimerContext);\n  const { timerType, setTimerType } = useContext(TimerContext);\n  const { rest, setRest } = useContext(TimerContext);\n  const { intro, setIntro } = useContext(TimerContext);\n  const { inQueue } = useContext(TimerContext);\n  const { setTimers } = useContext(TimerContext);\n  const { timerRounds, setTimerRounds } = useContext(TimerContext);\n  const { timers } = useContext(TimerContext);\n  const { outro, setOutro } = useContext(TimerContext);\n\n  const history = useHistory();\n\n  //make sure the timer is set correctly when entering direct URL\n  useEffect(() => {\n    if (props.match.path.slice(1)) {\n      setTimerType(props.match.path.slice(1));\n    }\n  }, [setTimerType, props.match.path]);\n\n  const refreshTimers = () => {\n    setTimers((prevTimers) =>\n      prevTimers.map((item) => {\n        let obj = Object.assign({}, item);\n        obj.status = STATUS.notRunning;\n        return obj;\n      })\n    );\n  };\n\n  // Click handler for all buttons (refactored to seperate handlers)\n\n  // Start/stop button\n  const handleClickStartStop = (e) => {\n    if (!docs) {\n      const t = Number(time);\n      if (\n        e.currentTarget.value === BTNTYPE.start ||\n        e.currentTarget.value === BTNTYPE.stop\n      ) {\n        if (\n          timerType === TIMERS.stopwatch &&\n          Number(time) !== Number(savedTime)\n        ) {\n          setIsRunning(true);\n          setBtnState(false);\n        }\n        if (timerType !== TIMERS.stopwatch && t) {\n          setIsRunning(true);\n          setBtnState(false);\n        }\n        if (inQueue) {\n          if (isRunning) {\n            setIsRunning(false);\n            setBtnState(true);\n          } else {\n            setIsRunning(true);\n            setBtnState(false);\n          }\n        }\n      }\n    }\n  };\n\n  //Reset button\n  const handleClickReset = () => {\n    if (!docs) {\n      if (inQueue) {\n        refreshTimers();\n        localStorage.setItem(\"timerQueue\", JSON.stringify(timers));\n        setIntro(true);\n        history.push(`/`);\n      }\n      if (timerType === TIMERS.stopwatch) {\n        setTime(0);\n      } else {\n        setTime(savedTime);\n      }\n      setBtnState(true);\n      setIsRunning(false);\n      setShowMessage(false);\n      setCurrentRound(rounds);\n      setCurrentRest(false);\n    }\n  };\n\n  //Forward button\n  const handleClickForward = () => {\n    if (!docs) {\n      const t = Number(time);\n\n      //for \"queue timer\"\n      if (inQueue && timerRounds > 0) {\n        setTimerRounds((prevTimerRounds) => prevTimerRounds - 1);\n        let currentIndex = timers.length - timerRounds;\n        setTimers((prevTimers) =>\n          prevTimers.map((item, index) => {\n            var temp = Object.assign({}, item);\n            if (index === currentIndex) {\n              temp.status = STATUS.completed;\n            }\n            if (index === currentIndex + 1) {\n              temp.status = STATUS.running;\n            }\n            return temp;\n          })\n        );\n        if (timers[currentIndex + 1]) {\n          setTimerType(timers[currentIndex + 1].timerType);\n          setSavedTime(timers[currentIndex + 1].time);\n          if (timers[currentIndex + 1].timerType === TIMERS.stopwatch) {\n            setTime(0);\n          } else {\n            setTime(timers[currentIndex + 1].time);\n            setRounds(timers[currentIndex + 1].rounds);\n            setCurrentRound(timers[currentIndex + 1].rounds);\n            setRest(timers[currentIndex + 1].rest);\n          }\n        }\n        if (timerRounds === 1) {\n          setTimers((prevTimers) => [\n            ...prevTimers.slice(0, -1),\n            {\n              ...prevTimers[prevTimers.length - 1],\n              status: STATUS.completed,\n            },\n          ]);\n          setOutro(true);\n          history.push(`/`);\n        }\n        setCurrentRest(false);\n        setIsRunning(true);\n        setBtnState(false);\n      }\n\n      //for \"single timer\"\n      else {\n        if (timerType === TIMERS.stopwatch) {\n          setTime(savedTime);\n          setMessage(MESSAGES.finished);\n          setShowMessage(true);\n        }\n        if (t && timerType !== TIMERS.stopwatch) {\n          setTime(0);\n          setMessage(MESSAGES.finished);\n          setShowMessage(true);\n          setCurrentRest(false);\n        }\n        setCurrentRound(0);\n        setIsRunning(false);\n        setBtnState(true);\n      }\n    }\n  };\n\n  //Settings/ready button\n  const handleClickSettingsReady = (e) => {\n    if (!docs) {\n      const t = Number(time);\n      if (\n        e.currentTarget.value === BTNTYPE.settings ||\n        e.currentTarget.value === BTNTYPE.ready ||\n        e.currentTarget.value === BTNTYPE.back\n      ) {\n        setSettingsState(!settingsState);\n        setBtnState(true);\n        setSavedTime(time);\n        setIsRunning(false);\n        setShowTimerRounds(false);\n        setShowMessage(false);\n        setCurrentRound(rounds);\n        setCurrentRest(false);\n\n        if (timerType === TIMERS.countdown || timerType === TIMERS.stopwatch) {\n          if (timerType === TIMERS.stopwatch) {\n            setSavedTime(time);\n            setTime(0);\n          }\n          if (!t) {\n            setMessage(MESSAGES.settimer);\n            setShowSettingsMessage(true);\n          } else {\n            setShowSettingsMessage(false);\n            setShowTimerRounds(true);\n          }\n        }\n        if (timerType === TIMERS.xy || timerType === TIMERS.tabata) {\n          if (!t || rounds < 1) {\n            setMessage(MESSAGES.settimer);\n            setShowSettingsMessage(true);\n          } else {\n            setShowSettingsMessage(false);\n            setShowTimerRounds(true);\n          }\n        }\n      }\n    }\n  };\n\n  //start the timer hook\n  useTimer(timerType);\n\n  // Base strucure for all timers\n  if (intro || outro) {\n    return <IntroOutro></IntroOutro>;\n  } else if (!settingsState) {\n    return (\n      <Panel timerType={timerType}>\n        <UpperPanel className=\"text-center\">\n          <Title>{timerType}</Title>\n          <Button\n            styleName=\"settingsBtn\"\n            onClick={handleClickSettingsReady}\n            value={BTNTYPE.settings}\n          ></Button>\n          <i className={`bi bi-stopwatch stopwatch ${!isRunning}`}></i>\n        </UpperPanel>\n        <Middlepanel>\n          <div className=\"container\">\n            <div className=\"row col text-center\">\n              {showSettingsMessage ? (\n                <>\n                  <Button\n                    styleName=\"ctaBtn\"\n                    onClick={handleClickSettingsReady}\n                    value={BTNTYPE.settings}\n                    inner={message + \" \"}\n                  ></Button>\n                </>\n              ) : showMessage ? (\n                <Message> {message}</Message>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        </Middlepanel>\n        <LowerPanel className=\"d-flex align-items-center\">\n          <div className=\"container\">\n            <div className=\"row col text-center\">\n              {showTimerRounds &&\n              (timerType === TIMERS.xy || timerType === TIMERS.tabata) ? (\n                <Message>\n                  {\" \"}\n                  {currentRound}/{rounds} rounds left\n                </Message>\n              ) : (\n                <Message>\n                  {timerType === TIMERS.stopwatch\n                    ? `Target: ${timerValue(savedTime)}`\n                    : timerType === TIMERS.countdown\n                    ? `Start time: ${timerValue(savedTime)}`\n                    : \" \"}\n                </Message>\n              )}\n              {showTimerRounds ? <DisplayTime value={currentRest} /> : <></>}\n            </div>\n            <div className=\"row justify-content-around\">\n              <Button\n                styleName=\"col-3\"\n                value={btnState ? BTNTYPE.start : BTNTYPE.stop}\n                onClick={handleClickStartStop}\n              ></Button>\n              <Button\n                styleName=\"col-3\"\n                value={BTNTYPE.reset}\n                onClick={handleClickReset}\n              ></Button>\n              <Button\n                styleName=\"col-3\"\n                value={BTNTYPE.forward}\n                onClick={handleClickForward}\n              ></Button>\n              <></>\n            </div>\n          </div>\n        </LowerPanel>\n      </Panel>\n    );\n  }\n  return (\n    //settings\n    <Panel timerType={timerType}>\n      <SettingsPanel className=\"settingspanel text-center d-flex align-items-center justify-content-center\">\n        <Title className=\"settingsTitle\">Settings</Title>\n        <Button\n          styleName=\"backBtn\"\n          onClick={handleClickSettingsReady}\n          value={BTNTYPE.back}\n        ></Button>\n        <Settings styleName=\"p-2\" timerType={timerType}></Settings>\n        {time > 0 && timerType !== TIMERS.tabata ? (\n          <Button\n            styleName=\"readyBtn\"\n            value={BTNTYPE.ready}\n            onClick={handleClickSettingsReady}\n          ></Button>\n        ) : time > 0 && rest > 0 ? (\n          <Button\n            styleName=\"readyBtn\"\n            value={BTNTYPE.ready}\n            onClick={handleClickSettingsReady}\n          ></Button>\n        ) : (\n          <Button\n            styleName=\"notReadyBtn\"\n            value={BTNTYPE.notReady}\n            disabled={true}\n            onClick={handleClickSettingsReady}\n          ></Button>\n        )}\n      </SettingsPanel>\n    </Panel>\n  );\n};\nexport default Timer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Timer from \"../components/generic/Timer\";\nimport Navbar from \"../components/generic/Navbar\";\nimport TimerQueue from \"../components/generic/TimerQueue\";\nimport { QueueStyle } from \"../utils/css.js\";\n\nimport { Route } from \"react-router-dom\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 5rem;\n  margin-left: 10rem;\n`;\n\nconst Timers = styled.div``;\n\nconst Queue = styled.div`\n.${QueueStyle}\n`;\n\nconst routes = [\n  {\n    path: \"/\",\n    component: Timer,\n  },\n  {\n    path: \"/assignment-3-keamarg\",\n    component: Timer,\n  },\n  {\n    path: \"/Stopwatch\",\n    component: Timer,\n  },\n  {\n    path: \"/Countdown\",\n    component: Timer,\n  },\n  {\n    path: \"/XY\",\n    component: Timer,\n  },\n  {\n    path: \"/Tabata\",\n    component: Timer,\n  },\n];\n\n// Using the react router to create navigation\nconst App = () => {\n  return (\n    <Container>\n      <Queue>\n        <TimerQueue></TimerQueue>\n      </Queue>\n      <Timers>\n        <Navbar />\n        {routes.map(({ path, component }, key) => (\n          <Route exact path={path} component={component} key={key} />\n        ))}\n      </Timers>\n    </Container>\n  );\n};\n\nexport default App;\n","import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { BTNTYPE, COLORS, TIMERS, STATUS } from \"../utils/helpers\";\nimport Settings from \"../components/generic/Settings\";\nimport Panel from \"../components/generic/Panel\";\nimport TimerQueue from \"../components/generic/TimerQueue\";\nimport { TimerContext } from \"../TimerProvider\";\nimport Button from \"../components/generic/Button\";\nimport {\n  ReadyBtn,\n  NotReadyBtn,\n  QueueBtn,\n  PulseAnim2,\n  PulseAnim3,\n  QueueStyle,\n} from \"../utils/css.js\";\nimport { useHistory } from \"react-router\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 5rem;\n  margin-left: 10rem;\n`;\n\nconst Queue = styled.div`\n.${QueueStyle}\n`;\n\nconst AddPanel = styled.div`\n  position: relative;\n  height: 27.5rem;\n  font-size: 0.8rem;\n  .readyBtn {\n    ${ReadyBtn}\n  }\n  .notReadyBtn {\n    ${NotReadyBtn}\n  }\n  .queueBtn {\n    ${QueueBtn}\n  }\n  ${PulseAnim2}\n  ${PulseAnim3}\n`;\n\nconst Text = styled.h1`\n  color: ${COLORS.text};\n`;\n\nconst Selector = styled.select`\n  border: 1px solid grey;\n  border-style: outset;\n  border-radius: 5px;\n  padding: 0.2rem 1rem 0.2rem 1rem;\n`;\n\nconst Add = () => {\n  const { timerType, setTimerType } = useContext(TimerContext);\n  const { time } = useContext(TimerContext);\n  const { rounds, setRounds } = useContext(TimerContext);\n  const { rest, setRest } = useContext(TimerContext);\n  const { timers, setTimers } = useContext(TimerContext);\n  const { setInQueue } = useContext(TimerContext);\n  const { setIntro } = useContext(TimerContext);\n  const { setOutro } = useContext(TimerContext);\n\n  const limit = 9;\n  const history = useHistory();\n\n  const handleChange = (e) => {\n    switch (e.target.value) {\n      case TIMERS.stopwatch:\n        setTimerType(TIMERS.stopwatch);\n        setRest(0);\n        setRounds(0);\n        localStorage.setItem(\"timerType\", \"Stopwatch\");\n        break;\n      case TIMERS.countdown:\n        setTimerType(TIMERS.countdown);\n        setRest(0);\n        setRounds(0);\n        localStorage.setItem(\"timerType\", \"Countdown\");\n        break;\n      case TIMERS.xy:\n        setTimerType(TIMERS.xy);\n        setRest(0);\n        setRounds(1);\n        localStorage.setItem(\"timerType\", \"XY\");\n        break;\n      case TIMERS.tabata:\n        setRounds(1);\n        setTimerType(TIMERS.tabata);\n        localStorage.setItem(\"timerType\", \"Tabata\");\n        break;\n      default:\n    }\n  };\n\n  const handleAddClick = () => {\n    const id = timers.length;\n    if (timers.length < limit) {\n      setTimers(() => [\n        ...timers,\n        {\n          id,\n          timerType,\n          time,\n          rounds,\n          rest,\n          totalTime: rounds ? time * rounds : time,\n          totalRest: rest ? rest * rounds : rest,\n          status: STATUS.notRunning,\n        },\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"timerQueue\", JSON.stringify(timers));\n  }, [timers]);\n\n  const handleQueueClick = () => {\n    setInQueue(true);\n    setIntro(false);\n    setOutro(true);\n    history.push(`/`);\n  };\n  return (\n    <Container>\n      <Queue>\n        <TimerQueue> </TimerQueue>\n      </Queue>\n      <Panel timerType={timerType}>\n        <AddPanel className=\"text-center\">\n          <Text>Add timer</Text>\n          <Selector\n            name=\"timers\"\n            id=\"timers\"\n            value={timerType}\n            onChange={handleChange}\n          >\n            <option value={TIMERS.stopwatch}>Stopwatch</option>\n            <option value={TIMERS.countdown}>Countdown</option>\n            <option value={TIMERS.xy}>XY</option>\n            <option value={TIMERS.tabata}>Tabata</option>\n          </Selector>\n          <div className=\"text-center\">\n            <Settings></Settings>\n          </div>\n          {time > 0 && timerType !== TIMERS.tabata && timers.length < limit ? (\n            <Button\n              styleName=\"readyBtn\"\n              value={BTNTYPE.add}\n              onClick={handleAddClick}\n            ></Button>\n          ) : Array.isArray(timers) &&\n            time > 0 &&\n            rest > 0 &&\n            timers.length < limit ? (\n            <Button\n              styleName=\"readyBtn\"\n              value={BTNTYPE.add}\n              onClick={handleAddClick}\n            ></Button>\n          ) : Array.isArray(timers) && timers.length > limit - 1 ? (\n            <Button\n              styleName=\"notReadyBtn\"\n              value={BTNTYPE.limit}\n              disabled={true}\n            ></Button>\n          ) : (\n            <Button\n              styleName=\"notReadyBtn\"\n              value={BTNTYPE.notReady}\n              disabled={true}\n            ></Button>\n          )}\n          {Array.isArray(timers) && timers.length > 0 ? (\n            <Button\n              styleName=\"queueBtn\"\n              value={BTNTYPE.queue}\n              onClick={handleQueueClick}\n              inner={\"Go to timers and queue \"}\n            ></Button>\n          ) : null}\n        </AddPanel>\n      </Panel>\n    </Container>\n  );\n};\n\nexport default Add;\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TimerContext } from \"./TimerProvider\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport AddView from \"./views/AddView\";\n\nconst Container = styled.div`\n  background: rgb(63, 162, 224);\n  background: linear-gradient(\n    118deg,\n    rgba(63, 162, 224, 0.7203256302521008) 0%,\n    rgba(49, 110, 148, 0.639093137254902) 35%,\n    rgba(224, 187, 52, 0.577468487394958) 68%,\n    rgba(78, 19, 148, 0.5802696078431373) 96%\n  );\n  height: 100vh;\n  overflow: auto;\n`;\nconst Navigation = styled.nav`\n  margin-bottom: 5rem;\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    border: 1px solid #e7e7e7;\n    background-color: #f3f3f3;\n  }\n\n  li {\n    float: left;\n  }\n\n  li a {\n    display: block;\n    color: #666;\n    text-align: center;\n    padding: 14px 16px;\n    text-decoration: none;\n  }\n\n  li a:hover:not(.active) {\n    background-color: #ddd;\n  }\n\n  li a.active {\n    color: white;\n    background-color: #04aa6d;\n  }\n`;\n\nconst App = () => {\n  const { setDocs } = useContext(TimerContext);\n  const { setIntro } = useContext(TimerContext);\n  const { setIsRunning } = useContext(TimerContext);\n  const { setShowSettingsMessage } = useContext(TimerContext);\n  const { setShowTimerRounds } = useContext(TimerContext);\n\n  const handleClick = (e) => {\n    if (e.target.innerHTML === \"Documentation\") {\n      setDocs(true);\n      setIsRunning(false);\n    } else {\n      setDocs(false);\n    }\n    if (e.target.innerHTML === \"Timers\") {\n      setIntro(true);\n      setIsRunning(false);\n    }\n    if (e.target.innerHTML === \"Add\") {\n      setIsRunning(false);\n    }\n\n    setShowSettingsMessage(false);\n    setShowTimerRounds(true);\n  };\n\n  return (\n    <Container>\n      <Router>\n        <Navigation>\n          <ul>\n            <li id=\"timers\" onClick={handleClick}>\n              <Link to=\"/\">Timers</Link>\n            </li>\n            <li value=\"docs\" onClick={handleClick}>\n              <Link to=\"/docs\">Documentation</Link>\n            </li>\n            <li value=\"add\" onClick={handleClick}>\n              <Link to=\"/add\">Add</Link>\n            </li>\n          </ul>\n        </Navigation>\n        <Switch>\n          <Route path=\"/add\">\n            <AddView />\n          </Route>\n          <Route path=\"/docs\">\n            <DocumentationView />\n          </Route>\n          <Route path=\"/\">\n            <TimersView />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport TimerProvider from \"./TimerProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TimerProvider>\n      <App />\n    </TimerProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}